package cmsc433.p3;

import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Executors;
//import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ThreadPoolExecutor;

/**
 * This file needs to hold your solver to be tested. You can alter the class to
 * extend any class that extends MazeSolver. It must have a constructor that
 * takes in a Maze. It must have a solve() method that returns the datatype
 * List<Direction> which will either be a reference to a list of steps to take
 * or will be null if the maze cannot be solved.
 */
public class StudentMTMazeSolver extends SkippingMazeSolver {
	public StudentMTMazeSolver(Maze maze) {
		super(maze);
	}

	public List<Direction> solve() {
		int processors = Runtime.getRuntime().availableProcessors();
		List<Direction> solution = null;
		Position start = maze.getStart();
		LinkedList<Position> startNodes = null;
		System.out.println(processors + " processors");
		ThreadPoolExecutor executor =(ThreadPoolExecutor) Executors.newFixedThreadPool(processors + 1);
		
		
		
		
		
		throw new RuntimeException("Not yet implemented!");
	}
}
